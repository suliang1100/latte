<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[AngularJs中的模块化\]]></title>
      <url>http://latte-time.com/2016/05/25/AngularJs%E4%B8%AD%E7%9A%84%E6%A8%A1%E5%9D%97%E5%8C%96/</url>
      <content type="html"><![CDATA[<p>一个简单的<code>angularJs</code>例子如下所示：<br><a id="more"></a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">ng-app</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-controller</span>=<span class="string">"firstController"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"name"</span> /&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">firstController</span>(<span class="params">$scope</span>)</span>&#123;</span><br><span class="line">	$scope.name = <span class="string">"suliang"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>以上是一个最典型的<code>angularJs</code>的<strong>MVC</strong>架构例子<code>model</code>层可以通过<code>controller</code>层来修改<code>model</code>层中的数据内容，而<code>model</code>中的数据修改结果将直接反馈到<code>view</code>层中去。</p>
<p><code>angularJs</code>中可以使用<code>angular.module</code>方法来设置模块，上面的例子使用模块化改写如下所示：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-controller</span>=<span class="string">"firstController"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"name"</span> /&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span><br><span class="line"><span class="keyword">var</span> m1 = angular.module(<span class="string">"myApp"</span>,[]); <span class="comment">//定义模块</span></span><br><span class="line">m1.controller(<span class="string">"firstController"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">$scope</span>)</span>&#123;  <span class="comment">//定义控制器</span></span><br><span class="line">	$scope.name = <span class="string">"suliang"</span>;</span><br><span class="line">&#125;)</span><br><span class="line"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">``` javascript</span><br><span class="line">使用上面的方法就可以封装一个模块，但是在上线进行资源压缩的时候会将`$scope`替换掉，`$scope`是依赖注入的变量，名称不能修改，所以我们在创建控制器的时候可以变成下面这样：</span><br><span class="line">```javascript</span><br><span class="line">m1.controller("firstController",["$scope",function($scope)&#123;</span><br><span class="line">	$scope.name = "suliang";</span><br><span class="line">&#125;])</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[封装Ajax函数]]></title>
      <url>http://latte-time.com/2016/05/24/%E5%B0%81%E8%A3%85Ajax%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>再来梳理一遍一个基本的Ajax流程：</p>
<blockquote>
<p>创建兼容的XHR对象 → 初始化请求 → 发送请求 → 接收数据</p>
</blockquote>
<p>我们在封装整个Ajax过程的时候需要知道以下几个内容</p>
<blockquote>
<p>传输的方式是<code>GET</code>还是<code>POST</code><br>服务器接收请求的<code>URL</code>是什么<br>需要向服务器传输什么数据<br>接收到服务器返回的数据之后怎么进行回调处理</p>
</blockquote>
<p>这些信息我们可以通过参数的形式传递到函数中去，如下所示：<br><a id="more"></a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">method,url,data,success</span>)</span>&#123;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>同样，将之前写的创建兼容XHR对象的代码放进去<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">method,url,data,success</span>)</span>&#123;</span><br><span class="line">	<span class="comment">//创建兼容XHR对象</span></span><br><span class="line">	<span class="keyword">var</span> xhr = <span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">try</span>&#123;</span><br><span class="line">		xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">	&#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">		xhr = <span class="keyword">new</span> ActiveXObject(<span class="string">'Microsoft.XMLHttp'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>然后初始化请求<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.open(method,url,<span class="literal">true</span>);</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><code>GET</code>请求是最常见的请求，最常用语向服务器查询某些信息。必要时可将查询字符串添加到<code>URL</code>的末尾。<br>所以如果<code>method</code>的值是<code>GET</code>的话，我们还需要进行<code>URL</code>处理，如下所示：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(method == <span class="string">'get'</span>)&#123;</span><br><span class="line">	url += <span class="string">'?'</span> + data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>将发送请求和处理返回请求添加进去我们的函数变成了下面这个样子：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">method,url,data,success</span>)</span>&#123;</span><br><span class="line">	<span class="comment">//创建兼容XHR对象</span></span><br><span class="line">	<span class="keyword">var</span> xhr = <span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">try</span>&#123;</span><br><span class="line">		xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">	&#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">		xhr = <span class="keyword">new</span> ActiveXObject(<span class="string">'Microsoft.XMLHttp'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//处理URL</span></span><br><span class="line">	<span class="keyword">if</span>(method == <span class="string">'get'</span>)&#123;</span><br><span class="line">		url += <span class="string">'?'</span> + data;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//准备发送</span></span><br><span class="line">	xhr.open(method,url,<span class="literal">true</span>);</span><br><span class="line">	<span class="comment">//按不同情况进行发送</span></span><br><span class="line">	<span class="keyword">if</span>(method == <span class="string">'get'</span>)&#123;</span><br><span class="line">		xhr.send(<span class="literal">null</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		xhr.setRequestHeader(<span class="string">'content-type'</span>, <span class="string">'application/x-www-form-urlencoded'</span>);</span><br><span class="line">		xhr.send(data);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//处理返回信息</span></span><br><span class="line">	xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(xhr.status == <span class="number">4</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(xhr.readyState == <span class="number">200</span> || xhr.readyState == <span class="number">304</span>)&#123;</span><br><span class="line">				success &amp;&amp; success(xhr.responseText);  <span class="comment">//调用回调函数</span></span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				alert(<span class="string">"出错了，出错信息为："</span>+xhr.status);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>我们在调用这个<code>ajax</code>函数的时候可能会碰到一些问题，比如我们不需要向服务器传输数据的时候，<code>data</code>参数其实就为空，我们在调用的时候需要给一个空的占位符，这样实现既冗余也不美观。我们可以像<code>jQuery</code>一样将所有参数全部写到一个对象里面去，将对象整体作为参数传过去。看看<code>jQuery</code>的调用方式：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">	url:<span class="string">'01.php'</span>, <span class="comment">//请求地址</span></span><br><span class="line">	type:<span class="string">'GET'</span>, <span class="comment">//发送请求方式</span></span><br><span class="line">	dataType:<span class="string">'json'</span>, <span class="comment">//发送数据类型</span></span><br><span class="line">	data:<span class="string">'name=suliang&amp;age=25'</span>, <span class="comment">//发送数据</span></span><br><span class="line">	<span class="keyword">async</span>:<span class="literal">true</span>, <span class="comment">//是否异步</span></span><br><span class="line">	timeout:<span class="number">5000</span>,  <span class="comment">//超时时间</span></span><br><span class="line">	beforesend:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;, <span class="comment">//发送请求之前调用</span></span><br><span class="line">	success:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;, <span class="comment">//请求成功之后调用</span></span><br><span class="line">	error:functuon()&#123;&#125;,  <span class="comment">//请求错误之后调用</span></span><br><span class="line">	complate:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;  <span class="comment">//请求完成之后调用</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>
<p>按照这样的调用方式一目了然，我们也可以对参数进行这样的封装，如下所示：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">	<span class="comment">//创建兼容XHR对象</span></span><br><span class="line">	<span class="keyword">var</span> xhr = <span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">try</span>&#123;</span><br><span class="line">		xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">	&#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">		xhr = <span class="keyword">new</span> ActiveXObject(<span class="string">'Microsoft.XMLHttp'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//处理不发送数据的情况</span></span><br><span class="line">	<span class="keyword">if</span>(!obj.data)&#123;</span><br><span class="line">		obj.data=<span class="string">""</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		obj.data = <span class="string">'?'</span> + obj.data;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//处理URL</span></span><br><span class="line">	<span class="keyword">if</span>(obj.type.toLowerCase()== <span class="string">'get'</span>)&#123;</span><br><span class="line">		obj.url += obj.data + <span class="string">"&amp;"</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();  <span class="comment">//避免缓存</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//准备发送</span></span><br><span class="line">	xhr.open(obj.type,obj.url,<span class="literal">true</span>);</span><br><span class="line">	<span class="comment">//按不同情况进行发送</span></span><br><span class="line">	<span class="keyword">if</span>(obj.type== <span class="string">'get'</span>)&#123;</span><br><span class="line">		xhr.send(<span class="literal">null</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		xhr.setRequestHeader(<span class="string">'content-type'</span>, <span class="string">'application/x-www-form-urlencoded'</span>);</span><br><span class="line">		xhr.send(obj.data);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//处理返回信息</span></span><br><span class="line">	xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(xhr.status == <span class="number">4</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(xhr.readyState == <span class="number">200</span> || xhr.readyState == <span class="number">304</span>)&#123;</span><br><span class="line">				ob.success &amp;&amp; obj.success(xhr.responseText);  <span class="comment">//调用回调函数</span></span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				alert(<span class="string">"出错了，出错信息为："</span>+xhr.status);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>这样我们在调用的时候就可以像<code>jQuery</code>一样传入一个obj对象作为参数了，如下所示：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ajax(&#123;</span><br><span class="line">	url:<span class="string">'01.php'</span>,</span><br><span class="line">	type:<span class="string">'GET'</span>,</span><br><span class="line">	data:<span class="string">'name=suliang&amp;age=25'</span>,</span><br><span class="line">	success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">		<span class="built_in">console</span>.log(data);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>
<p>在我们需要使用<code>GET</code>方式来从服务器获取数据的时候需要按照<code>URL</code>参数的格式进行拼接，如下所示：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=suliang&amp;age=<span class="number">25</span></span><br></pre></td></tr></table></figure></p>
<p>但是在实际使用过程中书写并不是很方便，所以这里我们需要使用<code>object</code>的方式进行参数传递，如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	name:<span class="string">"suliang"</span>,</span><br><span class="line">	age:<span class="number">25</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这里我们需要对传进去的对象进行拼接，以便进行数据传递。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(obj.data <span class="keyword">instanceof</span> <span class="built_in">Object</span>)&#123;</span><br><span class="line">	<span class="keyword">var</span> args = <span class="string">"?"</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> obj.data)&#123;</span><br><span class="line">		args+= i+<span class="string">"="</span>+obj.data[i]+<span class="string">"&amp;"</span>;  </span><br><span class="line">	&#125;</span><br><span class="line">	args = args.slice(<span class="number">0</span>,args.length<span class="number">-1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	alert(<span class="string">"数据类型不符"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>完整示例如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//创建兼容性XHR对象</span></span><br><span class="line">	<span class="keyword">var</span> xhr = <span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">try</span>&#123;</span><br><span class="line">		xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">	&#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">		xhr = <span class="keyword">new</span> ActiveXObject(<span class="string">'Microsoft.XMLHTTP'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//判断是否传入data属性</span></span><br><span class="line">	<span class="keyword">if</span>(!obj.data)&#123;</span><br><span class="line">		obj.data=<span class="string">""</span>;</span><br><span class="line">	&#125;		</span><br><span class="line"></span><br><span class="line">	<span class="comment">//判断数据类型，拼接数据</span></span><br><span class="line">	<span class="keyword">if</span>(obj.data <span class="keyword">instanceof</span> <span class="built_in">Object</span>)&#123;</span><br><span class="line">		<span class="keyword">var</span> args = <span class="string">"?"</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> obj.data)&#123;</span><br><span class="line">		    args+= i+<span class="string">"="</span>+<span class="built_in">encodeURI</span>(obj.data[i])+<span class="string">"&amp;"</span>;  </span><br><span class="line">		 &#125;</span><br><span class="line">		 args = args.slice(<span class="number">0</span>,args.length<span class="number">-1</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		 alert(<span class="string">"数据类型不符"</span>);</span><br><span class="line">		 <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(obj.type.toLowerCase()==<span class="string">"get"</span>)&#123;</span><br><span class="line">		obj.url += args + <span class="string">"&amp;"</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();  <span class="comment">//防止缓存</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//准备发送</span></span><br><span class="line">	xhr.open(obj.type,obj.url);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//分情况发送</span></span><br><span class="line">	<span class="keyword">if</span>(obj.type.toLowerCase()==<span class="string">"get"</span>)&#123;</span><br><span class="line">        xhr.send(<span class="literal">null</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	    xhr.setRequestHeader(<span class="string">'content-type'</span>, <span class="string">'application/x-www-form-urlencoded'</span>);</span><br><span class="line">	    xhr.send(args);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//处理接收结果</span></span><br><span class="line">	xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	    <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>)&#123;</span><br><span class="line">	    	<span class="keyword">if</span>(xhr.status == <span class="number">200</span> || xhr.status == <span class="number">304</span>)&#123;</span><br><span class="line">	    		obj.success &amp;&amp; obj.success(xhr.responseText);</span><br><span class="line">	    	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	    		<span class="built_in">console</span>.log(<span class="string">"错误"</span>);</span><br><span class="line">	    	&#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> button = <span class="built_in">document</span>.getElementById(<span class="string">"button"</span>);</span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line">button.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	ajax(&#123;</span><br><span class="line">		type:<span class="string">'get'</span>,</span><br><span class="line">		url:<span class="string">'01.php'</span>,</span><br><span class="line">		data:&#123;name:<span class="string">'苏亮'</span>,age:<span class="number">25</span>&#125;,</span><br><span class="line">		success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">			box.innerHTML = data;</span><br><span class="line">		&#125;,</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>
<p>服务器端代码如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$name = $_GET[<span class="string">'name'</span>];</span><br><span class="line">	$age =  $_GET[<span class="string">'age'</span>];</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'我的名字是'</span>.$name.<span class="string">',年龄'</span>.$age.<span class="string">'岁'</span>;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
  
  
</search>
